---
import Layout from "@/layouts/Layout.astro";
import Chart from "@/components/rpsruntime/chart.astro";

let datapoints: string[] = [
    "100",
    "1000",
    "10000",
    "100000.1",
    "100000.2",
    "100000.3",
    "100000.4",
    "100000.5",
    "100000.6",
    "100000.7",
    "100000.8",
    "100000.9",
    "100000.10",
];

let charts = {};
---

<Layout
    title="Visualization"
    css_color_palette="sunset"
    iconPath="/RPSRuntime/assets/rock-paper-scissors.png"
>
    <input
        slot="top-bar-button2"
        type="button"
        onclick="location.href='visualization';"
        value="Results"
    />
    <input
        slot="top-bar-button3"
        type="button"
        onclick="location.href='run';"
        value="Play"
    />

    <main id="mainBody">
        <h1>What is "Runtime"?</h1>
        <p>
            <a
                href="https://www.techtarget.com/searchsoftwarequality/definition/runtime#:~:text=When%20written%20as%20two%20words,runtime%20error%20and%20runtime%20metrics."
                >Runtime</a
            >, or run time, not to be confused with <a
                href="https://en.wikipedia.org/wiki/Execution_(computing)#Runtime"
                >runtime</a
            > is the amount of time it takes for a computer to run a program, usually
            measured in nanoseconds or milliseconds.
        </p>
        <br />
        <p>
            Runtime is used as a general metric of how resource intensive a
            computer program is for a <a
                href="https://en.wikipedia.org/wiki/Central_processing_unit"
                >CPU</a
            >; computer programs with a lower runtime are usually considered
            "better".
        </p>
        <br />
        <p>
            Some factors that affect runtime are: the algorithm, the current
            state of the hardware (including factors such as the temperature of
            the <a href="https://en.wikipedia.org/wiki/Central_processing_unit"
                >CPU</a
            >); <a href="https://en.wikipedia.org/wiki/Operating_system">OS</a>,
            and the compiler being used in addition to any other programs that
            are being run simultaneously.
        </p>
        <br />
        <p>
            Since algorithms are usually ranked based on their runtime, this
            experiment aims to find the best Rock Paper Scissors algorithm by
            finding the algorithm with the lowest runtime while controlling for
            hardware differences.
        </p>

        <h1>Interactive Chart</h1>

        <br />

        <script
            src="https://cdn.jsdelivr.net/npm/chart.js@4.4.5/dist/chart.umd.min.js"
            is:inline></script>
        <Chart datapoints={datapoints} chartID="chart1" />
        <Chart datapoints={datapoints} chartID="chart2" />
        <Chart datapoints={datapoints} chartID="chart3" />
        <Chart datapoints={datapoints} chartID="chart4" />
        <br />
    </main>

    <div slot="attributions">
        <a
            href="https://www.flaticon.com/free-icons/rock-paper-scissors"
            title="rock paper scissors icons"
            >Rock paper scissors icons created by Freepik - Flaticon</a
        >
        <a
            href="https://commons.wikimedia.org/wiki/File:Rock-paper-scissors.svg"
            title="rock paper scissors icons"
            >Rock paper scissors diagram created by Enzoklop</a
        >
    </div>
</Layout>

<style>
    main {
        margin: auto;
        font-size: 12px;
        line-height: 1.6;
        text-align: center;
    }
    h1 {
        font-size: 24px;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin-bottom: 1em;
    }
    .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
    }
    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 2rem;
        padding: 0;
    }
</style>
