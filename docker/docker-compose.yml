services:
  astro-app:
    container_name: astro-dev-server
    # image: node:lts-alpine
    restart: always
    working_dir: /apps/astro-app
    build:
      context: ../
      dockerfile: apps/astro-app/Dockerfile.dev
      target: runtime
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - 4321:4321
    volumes:
      - ../apps/astro-app:/apps/astro-app
    command: npm run dev -- --host

  sql-receptionist:
    container_name: sql-receptionist-dev-server
    # image: gcc:latest
    working_dir: /apps/sql-receptionist
    build:
      context: ../
      dockerfile: apps/sql-receptionist/Dockerfile.dev
      target: dev
    ports:
      - 2523:2523
    depends_on:
      database:
        condition: service_healthy

  # @TODO secrets for db authentication
  database:
    container_name: postgres
    image: postgres
    working_dir: /apps/postgres
    build:
      context: ../
      dockerfile: apps/postgres/Dockerfile.dev
      target: dev
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 5s # problem with timeout < interval?
      retries: 10
    volumes:
      - ../apps/postgres/data:/var/lib/postgresql/data
    shm_size: 128mb