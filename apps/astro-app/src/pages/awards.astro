---
export const prerender = true;
import { getCollection, render } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import Card from '@/components/LinklessCard.astro';
// const images = import.meta.glob('@/content/awards/*.png');

let awards = await getCollection('awards');
---

<Layout title="Awards & Accomplishments" css_color_palette="dark_mode" useAstroDefaultCSS={false}>
	<main>
		<ul role="list" class="link-card-grid">
			{ awards.map(async (award) => {
				const { Content } = await render(award);
				if (award.data.imagePath != null) { // if there is an image,
					return <Card title={award.data.title} body={award.data.description}><Content/></Card> <img src={award.data.imagePath} alt={"Image for the " + award.data.title + " award"}/>;
				} else {
					return <Card title={award.data.title} body={award.data.description}><Content/></Card>;
				}
			}) }
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	img {
		display: block;
		margin-left: auto;
		margin-right: auto;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit);
		gap: 2rem;
		padding: 0;
	}
</style>
